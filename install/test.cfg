
cat <<"EOF" >/etc/yum.repos.d/fedora-updates.repo
[fedora-updates]
name=fedora-updates
metalink=https://mirrors.fedoraproject.org/metalink?repo=updates-released-f20&arch=x86_64
enabled=1
gpgcheck=0
EOF

cat <<"EOF" >/etc/yum.repos.d/beaker-Fedora-debuginfo.repo
[beaker-Fedora-debuginfo]
name=beaker-Fedora-debuginfo
baseurl=http://download.eng.bos.redhat.com/released/F-20/GOLD/Fedora/x86_64/debug
enabled=1
gpgcheck=0
EOF

cat <<"EOF" >/etc/yum.repos.d/beaker-Fedora-Everything.repo
[beaker-Fedora-Everything]
name=beaker-Fedora-Everything
baseurl=http://download.eng.bos.redhat.com/released/F-20/GOLD/Everything/x86_64/os
enabled=1
gpgcheck=0
EOF

cat <<"EOF" >/etc/yum.repos.d/beaker-Fedora.repo
[beaker-Fedora]
name=beaker-Fedora
baseurl=http://download.eng.bos.redhat.com/released/F-20/GOLD/Fedora/x86_64/os/
enabled=1
gpgcheck=0
EOF
echo "root:$1$xDWPErEe$UhP.GEW2ANpet0yrwh6Yl1" | chpasswd
sed -i 's/SELINUX=.*/SELINUX=enforcing/' /etc/selinux/config
yum -y install @desktop-platform-devel
yum -y install @development
yum -y install @development-libs
yum -y install @development-tools
yum -y install @server-platform-devel
yum -y install gcc
yum -y install chrony
yum -y install sendmail
yum -y install pyOpenSSL
yum -y install ntp
yum -y install make
yum -y install procmail
yum -y install nfs-utils
yum -y install psmisc
yum -y install libxml2-python
yum -y install emacs
yum -y install expect
yum -y install wget
yum -y install redhat-lsb
yum -y install vim-enhanced
set -x
# Some distros have curl in their minimal install set, others have wget.
# We define a wrapper function around the best available implementation
# so that the rest of the script can use that for making HTTP requests.
if command -v curl >/dev/null ; then
    # Older curl versions lack --retry
    if curl --help 2>&1 | grep -q .*--retry ; then
        function fetch() {
            curl --retry 20 --remote-time -o "$1" "$2"
        }
    else
        function fetch() {
            curl --remote-time -o "$1" "$2"
        }
    fi
elif command -v wget >/dev/null ; then
    # In Anaconda images wget is actually busybox
    if wget --help 2>&1 | grep -q BusyBox ; then
        function fetch() {
            wget -O "$1" "$2"
        }
    else
        function fetch() {
            wget --tries 20 -O "$1" "$2"
        }
    fi
else
    echo "No HTTP client command available!"
    function fetch() {
        false
    }
fi

# Check in with Beaker Server, let it know our hostname, and
# record our install time.

# We will try a number of different places to figure out the system's FQDN.
# In all cases we will only accept a real FQDN (no "localhost", and must have
# a domain portion). DNS is our preferred source, otherwise the installer
# should have stored a hostname in /etc based on the kickstart or DHCP info.
# As a last resort we will use the system's first IP address.
function find_fqdn() {
    local fqdn=
    # hostname -f is the most future-proof approach, but it isn't always reliable
    fqdn=$(hostname -f)
    if [[ "$fqdn" == *.* && "$fqdn" != localhost.* ]] ; then echo "$fqdn" ; return ; fi
    # Preferred fallback if the OS is recent enough to provide it
    fqdn=$(cat /etc/hostname)
    if [[ "$fqdn" == *.* && "$fqdn" != localhost.* ]] ; then echo "$fqdn" ; return ; fi
    # Red Hat-based systems prior to systemd will have this
    fqdn=$(grep ^HOSTNAME= /etc/sysconfig/network | cut -f2- -d=)
    if [[ "$fqdn" == *.* && "$fqdn" != localhost.* ]] ; then echo "$fqdn" ; return ; fi
    # Getting desperate... pick the first local IP address
    hostname -I | cut -d' ' -f1
}
REPORTED_FQDN=$(find_fqdn)
fetch - "http://lab-devel-02.rhts.eng.bos.redhat.com:8000/install_done/8355/$REPORTED_FQDN"
fetch - http://lab-devel-02.rhts.eng.bos.redhat.com:8000/nopxe/dev-kvm-guest-03.rhts.eng.bos.redhat.com
echo 8355 > /root/RECIPE.TXT

# If netboot_method= is found in /proc/cmdline record it to /root
netboot_method=$(perl -n -e'/netboot_method=([^\s]+)/ && print $1' /proc/cmdline)
if [ -n "$netboot_method" ]; then
echo $netboot_method >/root/NETBOOT_METHOD.TXT
fi

# Enable post-install boot notification

fetch /usr/local/sbin/anamon http://lab-devel-02.rhts.eng.bos.redhat.com/beaker/anamon
fetch /etc/rc.d/init.d/anamon http://lab-devel-02.rhts.eng.bos.redhat.com/beaker/anamon.init

chmod 755 /etc/rc.d/init.d/anamon /usr/local/sbin/anamon
if selinuxenabled &>/dev/null ; then
    restorecon /etc/rc.d/init.d/anamon /usr/local/sbin/anamon
fi

chkconfig --add anamon

cat << __EOT__ > /etc/sysconfig/anamon
XMLRPC_URL="http://lab-devel-02.rhts.eng.bos.redhat.com:8000/RPC2"
RECIPE_ID="8355"
LOGFILES="/var/log/boot.log /var/log/messages /var/log/dmesg"
__EOT__

if [ -f /etc/sysconfig/readahead ] ; then
    cat >>/etc/sysconfig/readahead <<EOF

# readahead conflicts with auditd, see bug 561486 for detailed explanation.
#
# Should a task need to change these settings, it must revert to this state
# when test is done.

READAHEAD_COLLECT="no"
READAHEAD_COLLECT_ON_RPM="no"
EOF
fi

if [ -e /etc/sysconfig/ntpdate ] ; then
    systemctl enable ntpdate
fi
if [ -e "/etc/sysconfig/ntpd" ]; then
    systemctl enable ntpd
    GOT_G=$(/bin/cat /etc/sysconfig/ntpd | grep -E '^OPTIONS' | grep '\-g')

    if [ -z "$GOT_G" ]; then
        /bin/sed -i -r 's/(^OPTIONS\s*=\s*)(['\''|"])(.+)$/\1\2\-x \3 /' /etc/sysconfig/ntpd
    fi
fi
if [ -e /etc/chrony.conf ] ; then
    cp /etc/chrony.conf{,.orig}
    # use only DHCP-provided time servers, no default pool servers
    sed -i '/^server /d' /etc/chrony.conf
    cp /etc/sysconfig/network{,.orig}
    # setting iburst should speed up initial sync
    # https://bugzilla.redhat.com/show_bug.cgi?id=787042#c12
    echo NTPSERVERARGS=iburst >>/etc/sysconfig/network
    systemctl disable ntpd
    systemctl disable ntpdate
    systemctl enable chronyd
    systemctl enable chrony-wait
fi

if efibootmgr &>/dev/null ; then
    # The installer should have added a new boot entry for the OS
    # at the top of the boot order. We move it to the end of the order
    # and set it as BootNext instead.
    boot_order=$(efibootmgr | awk '/BootOrder/ { print $2 }')
    os_boot_entry=$(cut -d, -f1 <<<"$boot_order")
    new_boot_order=$(cut -d, -f2- <<<"$boot_order"),"$os_boot_entry"
    efibootmgr -o "$new_boot_order"
    efibootmgr -n "$os_boot_entry"
    # save the boot entry for later, so that rhts-reboot can set BootNext as well
    echo "$os_boot_entry" >/root/EFI_BOOT_ENTRY.TXT
fi


#Add Task Repo
cat <<"EOF" >/etc/yum.repos.d/beaker-tasks.repo
[beaker-tasks]
name=beaker-tasks
baseurl=http://beaker-devel.app.eng.bos.redhat.com/repos/8355
enabled=1
gpgcheck=0
EOF


# Add Harness Repo
cat <<"EOF" >/etc/yum.repos.d/beaker-harness.repo
[beaker-harness]
name=beaker-harness
baseurl=http://beaker-devel.app.eng.bos.redhat.com/harness/Fedora20/
enabled=1
gpgcheck=0
EOF

# Add distro and custom Repos
cat <<"EOF" >/etc/yum.repos.d/beaker-Fedora-debuginfo.repo
[beaker-Fedora-debuginfo]
name=beaker-Fedora-debuginfo
baseurl=http://download.eng.bos.redhat.com/released/F-20/GOLD/Fedora/x86_64/debug
enabled=1
gpgcheck=0
skip_if_unavailable=1
EOF
cat <<"EOF" >/etc/yum.repos.d/beaker-Fedora-Everything.repo
[beaker-Fedora-Everything]
name=beaker-Fedora-Everything
baseurl=http://download.eng.bos.redhat.com/released/F-20/GOLD/Everything/x86_64/os
enabled=1
gpgcheck=0
skip_if_unavailable=1
EOF
cat <<"EOF" >/etc/yum.repos.d/beaker-Fedora.repo
[beaker-Fedora]
name=beaker-Fedora
baseurl=http://download.eng.bos.redhat.com/released/F-20/GOLD/Fedora/x86_64/os/
enabled=1
gpgcheck=0
skip_if_unavailable=1
EOF


# fill the yum cache and redirect output to /dev/null
# This speeds up yum because of a bug where it will update stdout too often.
# http://lists.baseurl.org/pipermail/yum-devel/2011-December/008857.html
yum check-update > /dev/null 2>&1 || true
yum -y install beah rhts-test-env beakerlib
# This may fail if you are outside of Red Hat..
yum -y install beakerlib-redhat

cp /etc/beah_beaker.conf{,.default}
cat << EOF > /etc/beah_beaker.conf
# see /etc/beah_beaker.conf.default for commented configuration

[DEFAULT]
# LAB_CONTROLLER: URI of Beaker's XML-RPC handler
LAB_CONTROLLER=http://lab-devel-02.rhts.eng.bos.redhat.com:8000
#
# HOSTNAME: Pretend to be machine with given name.
# NOTE: This is mostly pointless as usually correct name is assigned by DHCP.
HOSTNAME=dev-kvm-guest-03.rhts.eng.bos.redhat.com
RECIPEID=8355

# Turn on hard limits on upload sizes:
FILE_SIZE_LIMIT=200000000
TASK_SIZE_LIMIT=800000000

EOF

cp /etc/beah.conf{,.default}
cat << EOF > /etc/beah.conf
# see /etc/beah.conf.default for commented configuration

[DEFAULT]
# Turn on more verbose logging and redirect to console. This is useful for
# debugging harness' problems.
LOG=Info
CONSOLE_LOG=Console
# To turn on debug logging uncomment the following line. Warning: this is
# rather verbose! This also requires LOG to be Debug.
#DEVEL=True

[TASK]
INTERFACE=

EOF

systemctl enable beah-srv
systemctl enable beah-beaker-backend
systemctl enable beah-fwd-backend

#Add test user account
useradd --password '$6$oIW3o2Mr$XbWZKaM7nA.cQqudfDJScupXOia5h1u517t6Htx/Q/MgXm82Pc/OcytatTeI4ULNWOMJzvpCigWiL4xKP9PX4.' test
cat <<"EOF" >/etc/profile.d/beaker.sh
export BEAKER="https://beaker-devel.app.eng.bos.redhat.com/"
export BEAKER_JOB_WHITEBOARD='fedora 20 guest machine test'
export BEAKER_RECIPE_WHITEBOARD=''
EOF
cat <<"EOF" >/etc/profile.d/beaker.csh
setenv BEAKER "https://beaker-devel.app.eng.bos.redhat.com/"
setenv BEAKER_JOB_WHITEBOARD 'fedora 20 guest machine test'
setenv BEAKER_RECIPE_WHITEBOARD ''
EOF
cat << EOF > /etc/profile.d/rh-env.sh
export LAB_CONTROLLER=lab-devel-02.rhts.eng.bos.redhat.com
export DUMPSERVER=
#export NFSSERVERS="RHEL3,fqdn:path RHEL4,fqdn:path RHEL5,fqdn:path RHEL6,fqdn:path NETAPP,fqdn:path SOLARIS,fqdn:path"
export LOOKASIDE=
export BUILDURL=
EOF
cat << EOF > /etc/profile.d/rh-env.csh
setenv LAB_CONTROLLER lab-devel-02.rhts.eng.bos.redhat.com
setenv DUMPSERVER 
#setenv NFSSERVERS "RHEL3,fqdn:path RHEL4,fqdn:path RHEL5,fqdn:path RHEL6,fqdn:path NETAPP,fqdn:path SOLARIS,fqdn:path"
setenv LOOKASIDE 
setenv BUILDURL 
EOF
mkdir -p /root/.ssh
cat >>/root/.ssh/authorized_keys <<"__EOF__"
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAqhTHUTSuyc9EsbXBgaSA8DinUyQFCghWR92FB2g+U9QzgZDdRxuE26E0a5iBP8La9KZZIPmzX6DQBYS3JflDQXA3nMANCRLtfb45vd2lv2EIBJhNUHPEM1OgzRBm1YSNcT31Dc3nCfJtoPfH//BY6iQjyKRCUhJS1ytIS8yz09GooYl0lutI1vRtVcZ7jNHtS4L/CfuRQ6TkRoqNHxR+q5IulK1g28UaulelVPa8Kh+q1u6gEH7gSbabbtFfvLQt/mSixFjniodZpFe5PXDxQaG7W1u2iII1GE8nwyup0heAN6CPsa2udlKHdRZkh8jd6llCRqsYMOzZyKpjxySk/Q== mjia@redhat.com
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDbMxcQkOQsvFkCB2bqGxdJSO98UW8zdSRsAHcNyl89jiaNv9+qmiq28vTLLzMlUd9OBmrMXfR/2XHNs7PTrwG/QAKsBu2RJnfyzPdnNgX0M7HGRHDCVj0U9LnlpeHa+uJlfsO0HcokkGfSuMC0s0mIE0gaYO82+5mJqKJOzjnkw9sjDB3gm3jO6GNyDTJosPZi1xlo8LSoVl6an0VK99hU+TBZdUqSyViYuHPRxWaSkRWu9nYFqJjuKfF9A+X2KbiZMe7utW3ctZRfYbC2bzz/xLCIDOA2DFfiMNiDvsJ7dwIj2J0QRzd4hMCbC6JwjQBqjGam9Sg+kQ/hcw4FseaP mjia@dhcp-40-154.bne.redhat.com
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCssx6DnJFivgVwA2VagA1Tk74Nz9QyDKmt4Rg9Qyy0BcuUMiBVucH6T8R6Br3Z0LqedDM/ldfUGRYhY7QpyRh9ibF2rOnSCFV1yjTE2O2CqFv71jW0WztgaBPGJQpmvCCQyc2qJ+bmaMpc5t8RwfsvjEuT23MJHoer/kM1vYCF1RqrH4ywZR39/VGdgyQiNAFs+Rtg1AmV9m31aAPsugKahHwofiKWjp58EuCYcyPt+RiXGPrf+F3Q0YV46lHjCBz+tkkY4XPzTSlpQrNnFKesIdJ3OkLJ9FZ1mVXvz73Ygt/awN/XOgen/TLPNnZD3GYTHwjd/jp6PkTMNKmbmtzx mjia@redhat.com
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCssx6DnJFivgVwA2VagA1Tk74Nz9QyDKmt4Rg9Qyy0BcuUMiBVucH6T8R6Br3Z0LqedDM/ldfUGRYhY7QpyRh9ibF2rOnSCFV1yjTE2O2CqFv71jW0WztgaBPGJQpmvCCQyc2qJ+bmaMpc5t8RwfsvjEuT23MJHoer/kM1vYCF1RqrH4ywZR39/VGdgyQiNAFs+Rtg1AmV9m31aAPsugKahHwofiKWjp58EuCYcyPt+RiXGPrf+F3Q0YV46lHjCBz+tkkY4XPzTSlpQrNnFKesIdJ3OkLJ9FZ1mVXvz73Ygt/awN/XOgen/TLPNnZD3GYTHwjd/jp6PkTMNKmbmtzx mjia@redhat.com
__EOF__
restorecon -R /root/.ssh
chmod go-w /root /root/.ssh /root/.ssh/authorized_keys
# Check in with Beaker Server, record our postinstall time.
fetch - http://lab-devel-02.rhts.eng.bos.redhat.com:8000/postinstall_done/8355
# Disable rhts-compat for Fedora15/RHEL7 and newer.
cat >> /etc/profile.d/task-overrides-rhts.sh <<END
export RHTS_OPTION_COMPATIBLE=
export RHTS_OPTION_COMPAT_SERVICE=
END
# no snippet data for Fedora20_post
# no snippet data for Fedora_post
# no snippet data for system_post

